@inherits Patternfly.Components.Base.PatternflyComponentBase

<div class="@Classes" @attributes="@AdditionalAttributes">
    @ChildContent
</div>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool Column { get; set; } = false;

    [Parameter]
    public bool Grow { get; set; } = false;

    [Parameter]
    public Justify Justify { get; set; } = Justify.FlexStart;

    protected override IEnumerable<string> OnIntroduceClasses()
    {
        var classes = new HashSet<string>(new string[] { "pf-l-flex" });
        if (AdditionalAttributes?.ContainsKey("class") ?? false)
        {
            classes.Add((string)AdditionalAttributes["class"]);    
        }

        if (Column)
        {
            classes.Add("pf-m-column");
        }

        if (Grow)
        {
            classes.Add("pf-m-grow");
        }

        switch (Justify)
        {
            case Justify.FlexStart: classes.Add("pf-m-justify-content-flex-start"); break;
            case Justify.SpaceBetween: classes.Add("pf-m-justify-content-space-between"); break;
            case Justify.SpaceAround: classes.Add("pf-m-justify-content-space-around"); break;
            case Justify.Center: classes.Add("pf-m-justify-content-center"); break;
            case Justify.FlexEnd: classes.Add("pf-m-justify-content-flex-end"); break;

        }

        return classes;
    }
}
