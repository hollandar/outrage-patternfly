@inherits Outrage.Patternfly.Components.Base.PatternflyComponentBase

<div class="@Classes" @attributes="AdditionalAttributes">
  <input
    class="pf-c-check__input"
    type="checkbox"
    id="@checkboxId"
    name="@(Name ?? checkboxId.ToString())"
    checked="@this.Value"
    @onchange="CheckboxChanged"
    disabled="@Disabled"
  />

  <label class="pf-c-check__label" for="@checkboxId">@Label</label>
</div>

@code {
    public HtmlId checkboxId = new HtmlId();
    [Parameter]
    public bool Value { get; set; } 

    [Parameter]
    public string? Name { get; set; }

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public bool? Disabled { get; set; } 

    [Parameter]
    public EventCallback<bool> ValueChanged { get; set; }

    async Task CheckboxChanged(ChangeEventArgs args)
    {
        if (args.Value is bool)
        {
            this.Value = (bool)args.Value;
            await this.ValueChanged.InvokeAsync(this.Value);
        }
    }

    protected override IEnumerable<string> OnIntroduceClasses()
    {
        var classes = new HashSet<string>(new string[] {"pf-c-check" });

        return classes;
    }
}
