@using Outrage.Patternfly.Components.Utilities
@inherits Patternfly.Components.Base.PatternflyComponentBase

<CascadingValue Name="FieldName" Value="formGroupId.With(this.Name)">
    <div class="@Classes" @attributes="AdditionalAttributes">
        @if (Label != null || Help != null)
        {
            <div class="pf-v5-c-form__group-label">
                @if (Label != null)
                {
                    <label class="pf-v5-c-form__label" for="@formGroupId.With(this.Name)">
                        <span class="pf-v5-c-form__label-text">@Label</span>
                        @if (IsRequired)
                        {
                            <span class="pf-v5-c-form__label-required" aria-hidden="true">&#42;</span>
                        }
                    </label>
                }
                @if (Help != null)
                {
                    <button type="button" class="pf-v5-c-form__group-label-help" aria-label="More info" @onclick="ToggleHelp">
                        <Icon Name="@IconHelp" Library="@IconLibrary" Weight="@IconWeight" />
                    </button>
                }
            </div>
        }
        <div class="pf-v5-c-form__group-control @(Stack? "pf-m-stack":"")">
            @Editors
            @if (Help != null && showHelp)
            {
                <p class="pf-v5-c-form__helper-text" id="@formGroupId.With("helptext")" aria-live="polite">@Help</p>
            }
        </div>
    </div>
</CascadingValue>

@code {
    HtmlId formGroupId = new();

    [Parameter]
    public bool IsRequired { get; set; } = false;

    [Parameter]
    public string? Label { get; set; } = null;

    [Parameter]
    public string? Name { get; set; }

    [Parameter]
    public bool Stack { get; set; } = false;

    [Parameter]
    public RenderFragment? Help { get; set; }

    [Parameter]
    public RenderFragment? Editors { get; set; }

    [Parameter] public LibraryEnum IconLibrary { get; set; } = PatternflyDefaults.IconLibrary;
    [Parameter] public WeightEnum IconWeight { get; set; } = PatternflyDefaults.IconWeight;
    [Parameter] public string IconHelp { get; set; } = "question-circle";

    bool showHelp = false;

    void ToggleHelp()
    {
        this.showHelp = !this.showHelp;
        this.StateHasChanged();
    }

    protected override IEnumerable<string> OnIntroduceClasses()
    {
        return new string[] { "pf-v5-c-form__group" };
    }
}
