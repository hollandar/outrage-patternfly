@using System.Diagnostics.CodeAnalysis
@inherits InputBase<DateTimeOffset>

<span class="pf-v5-c-form-control">
    <input @attributes="@AdditionalAttributes" @bind-value="CurrentValueAsString" @bind-value:event="@(BindEvent)" />
</span>

@code {
    [CascadingParameter(Name = "FieldName")]
    public string? FieldName { get; set; }

    [Parameter]
    public bool BindOnInput { get; set; } = false;

    protected string BindEvent => BindOnInput ? "oninput" : "onchange";

    protected override void OnParametersSet()
    {
        this.AdditionalAttributes = FormHelpers.PatternflyAugment(AdditionalAttributes, "", this.FieldName, (a) =>
        {
            a["type"] = "datetime-local";
        }
        ) ?? null;
        base.OnParametersSet();
    }

    protected override string FormatValueAsString(DateTimeOffset value)
    {
        return value.ToString("yyyy-MM-ddTHH:mm");
    }

    protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out DateTimeOffset result, [NotNullWhen(false)] out string validationErrorMessage)
    {
        validationErrorMessage = string.Empty;
        if (!DateTimeOffset.TryParse(value, out result))
        {
            validationErrorMessage = $"Could not parse a date from {value}.";
            return false;
        }

        return true;
    }
}
