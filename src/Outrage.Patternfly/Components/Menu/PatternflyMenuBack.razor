@using Outrage.Patternfly.Components.Utilities

<li class="pf-c-menu__list-item pf-m-drill-up" role="none">
    <button
        class="pf-c-menu__item"
        type="button"
        role="menuitem"
        tabindex="0"
        @onclick="CloseAsync"
    >
        <span class="pf-c-menu__item-main">
        <span class="pf-c-menu__item-toggle-icon">
            <Icon Name="@IconCaret" Size="@IconSize" Weight="@IconWeight" Library="@IconLibrary" />
        </span>
            <span class="pf-c-menu__item-text">@if (ParentItem != null)
                {
                    @(Text ?? ParentItem.Text)
                } else
                {
                    <span>@(Text ?? "Back")"</span>
                }
            </span>
        </span>
    </button>
</li>
@code {

    [Parameter]
    public string? IconCaret { get; set; } = "angle-left";

    [Parameter]
    public SizeEnum IconSize { get; set; } = SizeEnum.regular;

    [Parameter]
    public WeightEnum IconWeight { get; set; } = WeightEnum.solid;

    [Parameter]
    public LibraryEnum IconLibrary { get; set; } = LibraryEnum.fontawesome;

    [Parameter]
    public string? Text { get; set; } = null;

    [CascadingParameter(Name = "MenuParentItem")]
    public PatternflyMenuItem? ParentItem { get; set; }

    public async Task CloseAsync()
    {
        if (ParentItem != null)
        await ParentItem.ResetExpanded();
    }
}
