@implements IDisposable
@if (ParentPage == null)
{
    @ChildContent
}

@code {
    [CascadingParameter(Name = "PatternflyParentPage")] public PatternflyPage? ParentPage { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private Guid id = Guid.NewGuid();
    public Guid Id => id;

    public event Action OnChange = default!;
    protected override void OnInitialized()
    {
        if (ParentPage != null)
        {
            ParentPage.AddOnPage(this);
        }
        
        Update();
        base.OnInitialized();
    }

    public void Update()
    {
        OnChange?.Invoke();
    }

    protected override bool ShouldRender()
    {
        var shouldRender = base.ShouldRender();
        if (shouldRender)
        {
            this.Update();
        }

        return shouldRender;
    }


    public void Dispose()
    {
        ParentPage?.RemoveOnPage(this);
    }
}
