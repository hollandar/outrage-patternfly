@typeparam TKey
@using Outrage.Patternfly.Components.ManySelect

<PatternflyManySelect Class="@Class" @attributes="AdditionalAttributes" @ref="selectChild" TKey="TKey" CloseOnSelect="true" Value="@(new HashSet<TKey> { this.Value })" ValueChanged="UnderlyingValueChanged">
    <Viewer>@Viewer</Viewer>
    <Finder>@Finder</Finder>
</PatternflyManySelect>

@code {
    PatternflyManySelect<TKey> selectChild = default!;
    [Parameter] public TKey Value { get; set; } = default!;
    [Parameter] public EventCallback<TKey> ValueChanged { get; set; }
    [Parameter] public RenderFragment? Viewer { get; set; }
    [Parameter] public RenderFragment? Finder { get; set; }
    [Parameter] public string Class { get; set; } = string.Empty;
    [Parameter] public Dictionary<string, object> AdditionalAttributes { get; set; } = new();

    void UnderlyingValueChanged(HashSet<TKey> values)
    {
        this.ValueChanged.InvokeAsync(values.FirstOrDefault());
    }
}
